/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tap_hold_kp: tap_hold_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_HOLD_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <125>;
            flavor = "tap-preferred";
        };

        super_return: super_return {
            compatible = "zmk,behavior-caps-word";
            label = "SUPER_RETURN";
            #binding-cells = <0>;
            continue-list = <RETURN>;
            mods = <(MOD_LGUI)>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB             &kp Q  &kp W  &kp F     &kp P  &kp B                            &kp J                        &kp L  &kp U          &kp Y    &kp SEMI  &kp ESCAPE
&kp LS(LEFT_SHIFT)  &kp A  &kp R  &kp S     &kp T  &kp G                            &kp M                        &kp N  &kp E          &kp I    &kp O     &kp APOS
&kp LEFT_ALT        &kp X  &kp C  &kp D     &kp V  &kp Z                            &kp K                        &kp H  &kp COMMA      &kp DOT  &kp FSLH  &kp ESC
                                  &kp LGUI  &mo 1  &tap_hold_kp LEFT_SHIFT SPACE    &tap_hold_kp LEFT_SHIFT RET  &mo 2  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&to 4       &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&to 5       &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans  &trans     &trans  &trans
                                        &trans        &trans        &trans          &trans    &to 3     &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL              &kp AT         &kp HASH   &kp DLLR   &kp PRCNT       &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp N1                &kp N2         &kp N3     &kp N4     &kp N5          &kp N6     &kp N7    &kp N8           &kp N9    &kp N0    &kp GRAVE
&kp LSHFT  &kp NON_US_BACKSLASH  &kp LS(UNDER)  &kp EQUAL  &kp MINUS  &kp LS(PLUS)    &kp LBKT   &kp RBKT  &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                                &kp LGUI   &to 3      &kp SPACE       &kp RET    &trans    &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&to 4   &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6      &kp F7             &kp F8           &kp F9                &kp F10               &kp F11
&trans  &kp F11       &kp F12       &trans        &trans        &trans        &trans      &trans             &trans           &trans                &kp PRINTSCREEN       &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR    &kp C_MUTE  &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans
                                    &trans        &trans        &trans        &trans      &trans             &trans
            >;
        };

        qwerty {
            bindings = <
&kp TAB   &kp Q  &kp W  &kp E   &kp R   &kp T     &kp Y   &kp U   &kp I      &kp O    &kp P     &kp ESC
&kp CAPS  &kp A  &kp S  &kp D   &kp F   &kp G     &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&trans    &kp Z  &kp X  &kp C   &kp V   &kp B     &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        gaming {
            bindings = <
&kp ESC  &kp Q  &kp P  &kp E   &kp F   &kp G                            &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB  &kp A  &kp S  &kp W   &kp D   &kp R                            &trans  &trans  &trans  &trans  &trans  &trans
&to 0    &kp Z  &kp X  &kp C   &kp V   &kp B                            &trans  &trans  &trans  &trans  &trans  &trans
                       &trans  &trans  &tap_hold_kp LEFT_SHIFT SPACE    &trans  &trans  &trans
            >;
        };
    };
};
